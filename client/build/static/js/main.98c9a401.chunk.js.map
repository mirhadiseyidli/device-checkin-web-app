{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["moment","require","App","backendData","setBackendData","useState","useEffect","fetch","then","response","ok","Error","console","log","headers","get","text","json","data","catch","error","React","createElement","className","length","Fragment","map","device","key","_id","hostname","ip","lastUpdated","format","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0LAGA,MAAMA,EAASC,EAAQ,IAoDRC,MAlDf,WAEE,MAAOC,EAAaC,GAAkBC,mBAAS,IAuB/C,OArBAC,oBAAU,KACRC,MAAM,YACHC,KAAKC,IACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,+BAKlB,OAHAC,QAAQC,IAAIJ,EAASK,QAAQC,IAAI,iBAClCH,QAAQC,IAAIJ,EAASO,QACrBJ,QAAQC,IAAIJ,GACJA,EAASQ,SAGjBT,KAAKU,IACJN,QAAQC,IAAI,gBAAiBK,GAC7Bd,EAAec,KAEhBC,MAAMC,IACNR,QAAQQ,MAAM,mBAAoBA,MAEpC,IAGDC,IAAAC,cAAA,OAAKC,UAAU,SACY,IAAvBpB,EAAYqB,OACZH,IAAAC,cAAA,SAAG,eAEHD,IAAAC,cAACD,IAAMI,SAAQ,KACbJ,IAAAC,cAAA,OAAKC,UAAU,0BACbF,IAAAC,cAAA,OAAKC,UAAU,cAAa,YAC5BF,IAAAC,cAAA,OAAKC,UAAU,cAAa,cAC5BF,IAAAC,cAAA,OAAKC,UAAU,cAAa,iBAE7BpB,EAAYuB,IAAIC,GACfN,IAAAC,cAAA,OAAKC,UAAU,YAAYK,IAAKD,EAAOE,KACrCR,IAAAC,cAAA,OAAKC,UAAU,cAAcI,EAAOG,UACpCT,IAAAC,cAAA,OAAKC,UAAU,cAAcI,EAAOI,IACpCV,IAAAC,cAAA,OAAKC,UAAU,cAAcvB,EAAO2B,EAAOK,aAAaC,OAAO,yBCjC9DC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAA9B,KAAA6B,EAAAE,KAAA,UAAqB/B,KAAKgC,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH7B,IAAAC,cAACD,IAAM8B,WAAU,KACf9B,IAAAC,cAACpB,EAAG,QAORgC","file":"static/js/main.98c9a401.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './App.css'\n\nconst moment = require('moment');\n\nfunction App() {\n\n  const [backendData, setBackendData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/devices\")\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        console.log(response.headers.get('Content-Type'));  // Log content type\n\t      console.log(response.text());\n\t      console.log(response);\n        return response.json();  // First get the text\n\t      //return response.json();\n      })\n      .then(data => {\n        console.log(\"Fetched data:\", data);  // Log the data to see what is received\n        setBackendData(data);\n      })\n      .catch(error => {\n\t      console.error('Failed to fetch:', error);\n      });\n  }, []);\n\n  return (\n    <div className=\"table\">\n      {(backendData.length === 0) ? (\n        <p>Loading ...</p>\n      ) : (\n        <React.Fragment>\n          <div className=\"table-row table-header\">\n            <div className=\"table-cell\">Hostname</div>\n            <div className=\"table-cell\">IP Address</div>\n            <div className=\"table-cell\">Last Updated</div>\n          </div>\n          {backendData.map(device => (\n            <div className=\"table-row\" key={device._id}>\n              <div className=\"table-cell\">{device.hostname}</div>\n              <div className=\"table-cell\">{device.ip}</div>\n              <div className=\"table-cell\">{moment(device.lastUpdated).format('hh:mmA MM.DD.YY')}\n              </div>\n            </div>\n          ))}\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}